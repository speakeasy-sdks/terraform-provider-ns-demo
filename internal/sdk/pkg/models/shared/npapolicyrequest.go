// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NpaPolicyRequestRuleOrderOrder string

const (
	NpaPolicyRequestRuleOrderOrderTop    NpaPolicyRequestRuleOrderOrder = "top"
	NpaPolicyRequestRuleOrderOrderBottom NpaPolicyRequestRuleOrderOrder = "bottom"
	NpaPolicyRequestRuleOrderOrderBefore NpaPolicyRequestRuleOrderOrder = "before"
	NpaPolicyRequestRuleOrderOrderAfter  NpaPolicyRequestRuleOrderOrder = "after"
)

func (e NpaPolicyRequestRuleOrderOrder) ToPointer() *NpaPolicyRequestRuleOrderOrder {
	return &e
}

func (e *NpaPolicyRequestRuleOrderOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "top":
		fallthrough
	case "bottom":
		fallthrough
	case "before":
		fallthrough
	case "after":
		*e = NpaPolicyRequestRuleOrderOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NpaPolicyRequestRuleOrderOrder: %v", v)
	}
}

type NpaPolicyRequestRuleOrder struct {
	Order    *NpaPolicyRequestRuleOrderOrder `json:"order,omitempty"`
	Position *int64                          `json:"position,omitempty"`
	RuleID   *int64                          `json:"rule_id,omitempty"`
	RuleName *string                         `json:"rule_name,omitempty"`
}

type NpaPolicyRequest struct {
	Description *string                    `json:"description,omitempty"`
	Enabled     *string                    `json:"enabled,omitempty"`
	GroupID     *string                    `json:"group_id,omitempty"`
	GroupName   *string                    `json:"group_name,omitempty"`
	RuleData    *NpaPolicyRuleData         `json:"rule_data,omitempty"`
	RuleName    *string                    `json:"rule_name,omitempty"`
	RuleOrder   *NpaPolicyRequestRuleOrder `json:"rule_order,omitempty"`
}
