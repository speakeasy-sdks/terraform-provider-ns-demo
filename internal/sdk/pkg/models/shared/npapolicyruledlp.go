// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NpaPolicyRuleDlpActions string

const (
	NpaPolicyRuleDlpActionsAllow       NpaPolicyRuleDlpActions = "allow"
	NpaPolicyRuleDlpActionsBlock       NpaPolicyRuleDlpActions = "block"
	NpaPolicyRuleDlpActionsAlert       NpaPolicyRuleDlpActions = "alert"
	NpaPolicyRuleDlpActionsQuanrantine NpaPolicyRuleDlpActions = "quanrantine"
	NpaPolicyRuleDlpActionsBypass      NpaPolicyRuleDlpActions = "bypass"
)

func (e NpaPolicyRuleDlpActions) ToPointer() *NpaPolicyRuleDlpActions {
	return &e
}

func (e *NpaPolicyRuleDlpActions) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "block":
		fallthrough
	case "alert":
		fallthrough
	case "quanrantine":
		fallthrough
	case "bypass":
		*e = NpaPolicyRuleDlpActions(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NpaPolicyRuleDlpActions: %v", v)
	}
}

type NpaPolicyRuleDlp struct {
	Actions    []NpaPolicyRuleDlpActions `json:"actions,omitempty"`
	DlpProfile *string                   `json:"dlp_profile,omitempty"`
}

func (o *NpaPolicyRuleDlp) GetActions() []NpaPolicyRuleDlpActions {
	if o == nil {
		return nil
	}
	return o.Actions
}

func (o *NpaPolicyRuleDlp) GetDlpProfile() *string {
	if o == nil {
		return nil
	}
	return o.DlpProfile
}
